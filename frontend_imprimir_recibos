import React, { useState, useEfect } from 'react';import { View, Text, Button, TextInput } from 'react-native';import { Picker } from '@react-native-picker/picker';const App = () => {const [nomePaciente, setNomePaciente] = useState('');const [valorConsulta, setValorConsulta] = useState('');const [dataConsulta, setDataConsulta] = useState('');const [recibo, setRecibo] = useState({});const gerarRecibo = async () => {const response = await fetch('http:method: 'POST',headers: {'Content-Type': 'application/json',},body: JSON.stringify({nomePaciente,valorConsulta,dataConsulta,}),});const reciboGerado = await response.json();setRecibo(reciboGerado);};const imprimirRecibo = async () => {// Implemente a lógica para imprimir o recibo aqui};return (<View><TextInputplaceholder="Nome do paciente"value={nomePaciente}onChangeText={(text) => setNomePaciente(text)}/><TextInputplaceholder="Valor da consulta"value={valorConsulta}onChangeText={(text) => setValorConsulta(text)}/><TextInputplaceholder="Data da consulta"value={dataConsulta}onChangeText={(text) => setDataConsulta(text)}/><Button title="Gerar Recibo" onPress={gerarRecibo} /><Button title="Imprimir Recibo" onPress={imprimirRecibo} /><Text>Recibo:</Text><Text>{JSON.stringify(recibo)}</Text></View>);};export default App;const express = require('express');const app = express();const port = 3000;app.use(express.json());app.post('/gerar-recibo', (req, res) => {const { nomePaciente, valorConsulta, dataConsulta } = req.body;const recibo = {nomePaciente,valorConsulta,dataConsulta,};// Implemente a lógica para calcular o imposto de renda aqui// Implemente a lógica para linkar com o app da receita federal aquires.json(recibo);});app.listen(port, () => {console.log(`Servidor rodando na porta ${port}`);});import React, { useState } from 'react';import { View, Text, Button, TextInput } from 'react-native';import axios from 'axios';const App = () => {const [nomePaciente, setNomePaciente] = useState('');const [valorConsulta, setValorConsulta] = useState('');const [dataConsulta, setDataConsulta] = useState('');const [recibo, setRecibo] = useState({});const gerarRecibo = async () => {const response = await axios.post('http:/localhost:3000/gerar-recibo', {nomePaciente,valorConsulta,dataConsulta,});setRecibo(response.data);};return (<View><TextInputplaceholder="Nome do paciente"value={nomePaciente}onChangeText={(text) => setNomePaciente(text)}/><TextInputplaceholder="Valor da consulta"value={valorConsulta}onChangeText={(text) => setValorConsulta(text)}/><TextInputplaceholder="Data da consulta"value={dataConsulta}onChangeText={(text) => setDataConsulta(text)}/><Button title="Gerar Recibo" onPress={gerarRecibo} /><Text>Recibo:</Text><Text>Nome do paciente: {recibo.nomePaciente}</Text><Text>Valor da consulta: {recibo.valorConsulta}</Text><Text>Imposto de renda: {recibo.impostoDeRenda}</Text><Text>Data da consulta: {recibo.dataConsulta}</Text></View>);};export default App;const nodemailer = require('nodemailer');const transporter = nodemailer.createTransport({host: 'smtp.gmail.com',port: 587,secure: false,auth: {user: 'seu_email@gmail.com',pass: 'sua_senha',},});function notificarMedico(recibo) {const mailOptions = {from: 'seu_email@gmail.com',to: 'email_do_medico@gmail.com',subject: 'Recibo gerado',text: `Recibo gerado para o paciente ${recibo.nomePaciente} com valor de${recibo.valorConsulta}`,};transporter.sendMail(mailOptions, (error, info) => {if (error) {console.log(error);} else {console.log('Email enviado para o médico');}});}function notificarPaciente(recibo) {const mailOptions = {from: 'seu_email@gmail.com',to: recibo.emailPaciente,subject: 'Recibo gerado',text: `Recibo gerado com valor de ${recibo.valorConsulta}`,};transporter.sendMail(mailOptions, (error, info) => {if (error) {console.log(error);} else {console.log('Email enviado para o paciente');}});}app.post('/gerar-recibo', (req, res) => {const { nomePaciente, valorConsulta, dataConsulta, emailPaciente } = req.body;const impostoDeRenda = calcularImpostoDeRenda(valorConsulta);const recibo = {nomePaciente,valorConsulta,impostoDeRenda,dataConsulta,emailPaciente,};notificarMedico(recibo);notificarPaciente(recibo);res.json(recibo);});const pdf = require('pdf-creator-node');const fs = require('fs');function imprimirRecibo(recibo) {const html `= <html><body><h1>Recibo</h1><p>Nome do paciente: ${recibo.nomePaciente}</p><p>Valor da consulta: ${recibo.valorConsulta}</p><p>Imposto de renda: ${recibo.impostoDeRenda}</p><p>Data da consulta: ${recibo.dataConsulta}</p></body></html>`;const options = {format: 'A4',orientation: 'portrait',border: '10mm',};const document = {html,data: {},path: './recibo.pdf',};pdf.create(document, options).then((res) => {console.log(res);}).catch((error) => {console.error(error);});}app.post('/gerar-recibo', (req, res) => {const { nomePaciente, valorConsulta, dataConsulta, emailPaciente } = req.body;const impostoDeRenda = calcularImpostoDeRenda(valorConsulta);const recibo = {nomePaciente,valorConsulta,impostoDeRenda,dataConsulta,emailPaciente,};imprimirRecibo(recibo);res.json(recibo);});